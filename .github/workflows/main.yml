name: build&release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs: 
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      version: ${{ steps.get_version.outputs.version}}
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'latest'
      
      - name: Get package version
        id: get_version
        run: echo "version=$(node -p "require('./package.json').version")" >> "$GITHUB_OUTPUT"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          release_name: Release ${{ steps.get_version.outputs.version }}
          body: |
            Release ${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: false


  build:
    runs-on: ${{ matrix.os }}
    needs: release
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'latest'

      - name: Install dependencies
        run: npm install

      - name: Build package
        run: |
          npm install --save-dev @electron-forge/cli @electron-forge/maker-squirrel @electron-forge/maker-deb @electron-forge/maker-zip
          npx electron-forge make

      - name: Build package and Upload Release Asset(win)
        if: runner.os == 'Windows'
        run: |
          mkdir ./artifacts
          powershell Compress-Archive -Path out/make/* -DestinationPath artifacts/package.zip
      
      - name: Build package and Upload Release Asset(other)
        if: runner.os != 'Windows'
        run: |
          mkdir ./artifacts
          zip -r artifacts/package.zip out/make/

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: artifacts/package.zip
          asset_name: package-${{ needs.release.outputs.version }}-${{ runner.os }}-${{ runner.arch }}.zip
          asset_content_type: application/zip
